# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.18
    working_directory: /go/src/github.com/fastgitorg/fgit-go
    environment:
      CGO_ENABLED: "0"
    steps:
      - checkout
      - run:
          name:
            Build AMD64
          command: |
            cd src
            version=`cat version`
            timestamp=`date "+%Y-%m-%d %H:%M:%S"`
            echo "version -> $version"
            echo "timestamp -> $timestamp"
            GOARCH=amd64 GOOS=windows go build -ldflags "-s -w -X main.version=$version -X \"main.timestamp=$timestamp\"" -o ~/release/fgit-windows-amd64.exe ./
            GOARCH=amd64 GOOS=darwin go build -ldflags "-s -w -X main.version=$version -X \"main.timestamp=$timestamp\"" -o ~/release/fgit-darwin-amd64 ./
            GOARCH=amd64 GOOS=linux go build -ldflags "-s -w -X main.version=$version -X \"main.timestamp=$timestamp\"" -o ~/release/fgit-linux-amd64 ./

      - run:
          name:
            Build 386
          command: |
            cd src
            version=`cat version`
            timestamp=`date "+%Y-%m-%d %H:%M:%S"`
            echo "version -> $version"
            echo "timestamp -> $timestamp"
            GOARCH=386 GOOS=windows go build -ldflags "-s -w -X main.version=$version -X \"main.timestamp=$timestamp\"" -o ~/release/fgit-windows-386.exe ./
            GOARCH=386 GOOS=linux go build -ldflags "-s -w -X main.version=$version -X \"main.timestamp=$timestamp\"" -o ~/release/fgit-linux-386 ./

      - run:
          name:
            Build ARM
          command: |
            cd src
            version=`cat version`
            timestamp=`date "+%Y-%m-%d %H:%M:%S"`
            echo "version -> $version"
            echo "timestamp -> $timestamp"
            GOARCH=arm GOOS=linux go build -ldflags "-s -w -X main.version=$version -X \"main.timestamp=$timestamp\"" -o ~/release/fgit-linux-arm ./

      - run:
          name:
            Build ARM64
          command: |
            cd src
            version=`cat version`
            timestamp=`date "+%Y-%m-%d %H:%M:%S"`
            echo "version -> $version"
            echo "timestamp -> $timestamp"
            GOARCH=arm64 GOOS=linux go build -ldflags "-s -w -X main.version=$version -X \"main.timestamp=$timestamp\"" -o ~/release/fgit-linux-arm64 ./

      - run:
          name:
            Archive
          command: |
            mkdir ~/tmp
            tar -zcvf ~/tmp/all.tar.gz ~/release
            cp ~/tmp/all.tar.gz ~/release

      - store_artifacts:
          path: ~/release
          destination: CI Build
